/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scss_app_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scss/app.scss */ \"./src/scss/app.scss\");\n/* harmony import */ var _demo_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./demo.js */ \"./src/js/demo.js\");\n/* harmony import */ var _demo_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_demo_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _accordion_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./accordion.mjs */ \"./src/js/accordion.mjs\");\n/* harmony import */ var _navToggle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./navToggle */ \"./src/js/navToggle.js\");\n/* harmony import */ var _navToggle__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_navToggle__WEBPACK_IMPORTED_MODULE_3__);\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n/* Your JS Code goes here */\n\n/* Demo JS */\n\n\n\n\nvar _iterator = _createForOfIteratorHelper(document.querySelectorAll(\".accordion\")),\n    _step;\n\ntry {\n  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n    var el = _step.value;\n    new _accordion_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"](el);\n  }\n} catch (err) {\n  _iterator.e(err);\n} finally {\n  _iterator.f();\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvYXBwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUVBOztBQUlBOztBQUNBO0FBRUE7OzJDQUNpQkMsUUFBUSxDQUFDQyxnQkFBVCxDQUEwQixZQUExQjs7OztFQUFqQixvREFBMEQ7SUFBQSxJQUEvQ0MsRUFBK0M7SUFBQSxJQUFJSCxzREFBSixDQUFjRyxFQUFkO0VBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGdlb3Rvb2xraXQvZ2VvdG9vbGtpdC8uL3NyYy9qcy9hcHAuanM/OTBlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4uL3Njc3MvYXBwLnNjc3MnO1xyXG5cclxuLyogWW91ciBKUyBDb2RlIGdvZXMgaGVyZSAqL1xyXG5cclxuXHJcblxyXG4vKiBEZW1vIEpTICovXHJcbmltcG9ydCAnLi9kZW1vLmpzJztcclxuXHJcbmltcG9ydCBBY2NvcmRpb24gZnJvbSBcIi4vYWNjb3JkaW9uLm1qc1wiO1xyXG5mb3IgKGNvbnN0IGVsIG9mIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuYWNjb3JkaW9uXCIpKSBuZXcgQWNjb3JkaW9uKGVsKTtcclxuaW1wb3J0ICcuL25hdlRvZ2dsZSc7Il0sIm5hbWVzIjpbIkFjY29yZGlvbiIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsImVsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/js/app.js\n");

/***/ }),

/***/ "./src/js/demo.js":
/*!************************!*\
  !*** ./src/js/demo.js ***!
  \************************/
/***/ (() => {

eval("var demo = function demo() {\n  return 'Webpack Boilerplate v5.12.0 - SASS/PostCSS, ES6/7, browser sync, source code listing and more.';\n}; // eslint-disable-next-line no-console\n\n\nconsole.log(demo());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvZGVtby5qcy5qcyIsIm5hbWVzIjpbImRlbW8iLCJjb25zb2xlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZ2VvdG9vbGtpdC9nZW90b29sa2l0Ly4vc3JjL2pzL2RlbW8uanM/YzM0OCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkZW1vID0gKCkgPT4gJ1dlYnBhY2sgQm9pbGVycGxhdGUgdjUuMTIuMCAtIFNBU1MvUG9zdENTUywgRVM2LzcsIGJyb3dzZXIgc3luYywgc291cmNlIGNvZGUgbGlzdGluZyBhbmQgbW9yZS4nO1xyXG5cclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcclxuY29uc29sZS5sb2coZGVtbygpKTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFNQSxJQUFJLEdBQUcsU0FBUEEsSUFBTztFQUFBLE9BQU0sZ0dBQU47QUFBQSxDQUFiLEMsQ0FFQTs7O0FBQ0FDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixJQUFJLEVBQWhCIn0=\n//# sourceURL=webpack-internal:///./src/js/demo.js\n");

/***/ }),

/***/ "./src/js/navToggle.js":
/*!*****************************!*\
  !*** ./src/js/navToggle.js ***!
  \*****************************/
/***/ (() => {

eval("document.querySelector('#globalHeader-collapse-button').addEventListener('click', function (e) {\n  var select = document.querySelector('.accordion-menu-holder');\n  select.classList.toggle('close');\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvbmF2VG9nZ2xlLmpzLmpzIiwibmFtZXMiOlsiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJzZWxlY3QiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL0BnZW90b29sa2l0L2dlb3Rvb2xraXQvLi9zcmMvanMvbmF2VG9nZ2xlLmpzPzIyYWUiXSwic291cmNlc0NvbnRlbnQiOlsiZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2dsb2JhbEhlYWRlci1jb2xsYXBzZS1idXR0b24nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcclxuXHJcbiAgICBsZXQgc2VsZWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFjY29yZGlvbi1tZW51LWhvbGRlcicpO1xyXG5cclxuXHJcbiAgICBzZWxlY3QuY2xhc3NMaXN0LnRvZ2dsZSgnY2xvc2UnKTtcclxuXHJcbn0pOyJdLCJtYXBwaW5ncyI6IkFBQUFBLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QiwrQkFBdkIsRUFBd0RDLGdCQUF4RCxDQUF5RSxPQUF6RSxFQUFrRixVQUFTQyxDQUFULEVBQVk7RUFFMUYsSUFBSUMsTUFBTSxHQUFHSixRQUFRLENBQUNDLGFBQVQsQ0FBdUIsd0JBQXZCLENBQWI7RUFHQUcsTUFBTSxDQUFDQyxTQUFQLENBQWlCQyxNQUFqQixDQUF3QixPQUF4QjtBQUVILENBUEQifQ==\n//# sourceURL=webpack-internal:///./src/js/navToggle.js\n");

/***/ }),

/***/ "./src/scss/app.scss":
/*!***************************!*\
  !*** ./src/scss/app.scss ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2Nzcy9hcHAuc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZ2VvdG9vbGtpdC9nZW90b29sa2l0Ly4vc3JjL3Njc3MvYXBwLnNjc3M/NjI5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scss/app.scss\n");

/***/ }),

/***/ "./src/js/accordion.mjs":
/*!******************************!*\
  !*** ./src/js/accordion.mjs ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Accordion)\n/* harmony export */ });\n/* harmony import */ var _helpers_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.mjs */ \"./src/js/helpers.mjs\");\n/* harmony import */ var _fold_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fold.mjs */ \"./src/js/fold.mjs\");\n\r\n\r\n\r\nconst accordions = [];\r\nlet activeAccordions = 0;\r\nlet lastResizeRate;\r\n\r\n\r\n/**\r\n * Represents a column of collapsible content regions.\r\n * @class\r\n */\r\nclass Accordion {\r\n\r\n    /**\r\n     * Instantiate a new Accordion instance.\r\n     *\r\n     * @param {HTMLElement} el                    - Container wrapped around each immediate fold\r\n     * @param {Object}      options               - Optional hash of settings\r\n     * @param {String}      options.openClass     - CSS class controlling each fold's \"open\" state\r\n     * @param {String}      options.closeClass    - CSS class used to mark a fold as closed\r\n     * @param {String}      options.edgeClass     - CSS class toggled based on whether the bottom-edge is visible\r\n     * @param {String}      options.snapClass     - CSS class for disabling transitions between window resizes\r\n     * @param {String}      options.enabledClass  - CSS class marking an accordion as enabled\r\n     * @param {String}      options.disabledClass - CSS class marking an accordion as disabled\r\n     * @param {Boolean}     options.disabled      - Whether to disable the accordion on creation\r\n     * @param {Boolean}     options.modal         - Whether to close the current fold when opening another\r\n     * @param {Boolean}     options.noAria        - Disable the addition and management of ARIA attributes\r\n     * @param {Boolean}     options.noKeys        - Disable keyboard navigation\r\n     * @param {Boolean}     options.noTransforms  - Disable CSS transforms; positioning will be used instead\r\n     * @param {Number}      options.heightOffset  - Distance to offset each fold by\r\n     * @param {Boolean}     options.useBorders    - Consider borders when calculating fold heights\r\n     * @param {Function}    options.onToggle      - Callback executed when opening or closing a fold\r\n     * @constructor\r\n     */\r\n    constructor(el, options) {\r\n        this.index = accordions.push(this) - 1;\r\n\r\n        // Parse options\r\n        options = options || {};\r\n        this.openClass = options.openClass || \"open\";\r\n        this.closeClass = options.closeClass || \"closed\";\r\n        this.edgeClass = (undefined === options.edgeClass ? \"edge-visible\" : options.edgeClass);\r\n        this.snapClass = (undefined === options.snapClass ? \"snap\" : options.snapClass);\r\n        this.enabledClass = (undefined === options.enabledClass ? \"accordion\" : options.enabledClass);\r\n        this.disabledClass = options.disabledClass;\r\n        this.modal = !!options.modal;\r\n        this.noAria = !!options.noAria;\r\n        this.noKeys = !!options.noKeys;\r\n        this.noTransforms = !!options.noTransforms;\r\n        this.heightOffset = +options.heightOffset || 0;\r\n        this.useBorders = undefined === options.useBorders ? \"auto\" : options.useBorders;\r\n        this.onToggle = options.onToggle;\r\n\r\n\r\n        // Create a fold for each immediate descendant of the Accordion's container\r\n        let folds = [];\r\n        for (let i of Array.from(el.children)) {\r\n            let fold = new _fold_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, i);\r\n            folds.push(fold);\r\n\r\n            // Connect the fold to its previous sibling, if it's not the first to be added\r\n            let prev = folds[folds.length - 2];\r\n            if (prev) {\r\n                prev.nextFold = fold;\r\n                fold.previousFold = prev;\r\n            }\r\n        }\r\n\r\n\r\n        el.accordion = this.index;\r\n        this.noAria || el.setAttribute(\"role\", \"tablist\");\r\n        this.el = el;\r\n        this.folds = folds;\r\n\r\n        // Add .enabledClass early - it might affect the heights of each fold\r\n        if (!options.disabled && this.enabledClass)\r\n            el.classList.add(this.enabledClass);\r\n\r\n        this.update();\r\n\r\n\r\n        // Find out if this accordion's nested inside another\r\n        let next = el;\r\n        while ((next = next.parentNode) && 1 === next.nodeType) {\r\n            let fold = Accordion.getFold(next);\r\n            if (fold) {\r\n                let accordion = fold.accordion;\r\n                this.parent = accordion;\r\n                this.parentFold = fold;\r\n                this.edgeClass && el.classList.remove(this.edgeClass);\r\n                (accordion.childAccordions = accordion.childAccordions || []).push(this);\r\n                (fold.childAccordions = fold.childAccordions || []).push(this);\r\n\r\n                // Adjust the height of the containing fold's element\r\n                if (fold.open) {\r\n                    let scrollHeight = fold.el.scrollHeight;\r\n                    let distance = (fold.headingHeight + fold.content.scrollHeight) - scrollHeight || (scrollHeight - fold.el.clientHeight);\r\n                    accordion.updateFold(fold, distance);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n\r\n        this.edgeClass && this.el.addEventListener(_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.transitionEnd, this.onTransitionEnd = e => {\r\n            if (!this.parent && e.target === el && \"height\" === e.propertyName && el.getBoundingClientRect().bottom > window.innerHeight)\r\n                el.classList.remove(this.edgeClass);\r\n        });\r\n\r\n        this.disabled = !!options.disabled;\r\n    }\r\n\r\n\r\n    /**\r\n     * Get or set the accordion enclosing this one.\r\n     *\r\n     * @property\r\n     * @type {Accordion}\r\n     */\r\n    set parent(input) { this._parent = input; }\r\n    get parent() {\r\n        let result = this._parent;\r\n        if (!result) return null;\r\n\r\n        // Search for the first ancestor that *isn't* disabled\r\n        while (result) {\r\n            if (!result.disabled) return result;\r\n            result = result.parent;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    /**\r\n     * Get or set the fold of the accordion enclosing this one.\r\n     *\r\n     * @property\r\n     * @type {Fold}\r\n     */\r\n    set parentFold(input) { this._parentFold = input; }\r\n    get parentFold() {\r\n        let fold = this._parentFold;\r\n        if (!fold) return null;\r\n\r\n        let accordion = fold.accordion;\r\n\r\n        // Search for the first ancestor that *isn't* disabled\r\n        while (fold && accordion) {\r\n            if (!accordion.disabled) return fold;\r\n            if (accordion = accordion.parent)\r\n                fold = accordion.parentFold;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    /**\r\n     * Whether the accordion's been deactivated.\r\n     *\r\n     * @property\r\n     * @type {Boolean}\r\n     */\r\n    get disabled() { return this._disabled; }\r\n    set disabled(input) {\r\n        if ((input = !!input) !== this._disabled) {\r\n            const el = this.el;\r\n            const style = el.style;\r\n            const classes = el.classList;\r\n\r\n            this.enabledClass && (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.setToken)(classes, this.enabledClass, !input);\r\n            this.disabledClass && (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.setToken)(classes, this.disabledClass, input);\r\n\r\n\r\n            // Deactivating\r\n            if (this._disabled = input) {\r\n                style.height = null;\r\n                this.snapClass && classes.remove(this.snapClass);\r\n                if (this.edgeClass) {\r\n                    el.removeEventListener(_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.transitionEnd, this.onTransitionEnd);\r\n                    classes.remove(this.edgeClass);\r\n                }\r\n\r\n                for (let i of this.folds)\r\n                    i.disabled = true;\r\n\r\n                this.noAria || el.removeAttribute(\"role\");\r\n                --activeAccordions;\r\n            }\r\n\r\n\r\n            // Reactivating\r\n            else {\r\n                for (let i of this.folds)\r\n                    i.disabled = false;\r\n\r\n                this.noAria || el.setAttribute(\"role\", \"tablist\");\r\n                ++activeAccordions;\r\n                this.update();\r\n            }\r\n\r\n\r\n\r\n            // If there're no more active accordions, disable the onResize handler\r\n            if (activeAccordions <= 0) {\r\n                activeAccordions = 0;\r\n                Accordion.setResizeRate(false);\r\n            }\r\n\r\n            // Otherwise, reactivate the onResize handler, assuming it was previously active\r\n            else if (lastResizeRate)\r\n                Accordion.setResizeRate(lastResizeRate);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Height of the accordion's container element.\r\n     *\r\n     * @property\r\n     * @type {Number}\r\n     */\r\n    get height() { return this._height; }\r\n    set height(input) {\r\n        if (input && (input = +input) !== this._height) {\r\n            this.el.style.height = input + \"px\";\r\n            this._height = input;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Internal method to check if an accordion's bottom-edge is visible to the user (or about to be).\r\n     *\r\n     * @param {Number} offset\r\n     * @private\r\n     */\r\n    edgeCheck(offset) {\r\n        let edgeClass = this.edgeClass;\r\n        if (edgeClass) {\r\n            let box = this.el.getBoundingClientRect();\r\n            let windowEdge = window.innerHeight;\r\n            let classes = this.el.classList;\r\n\r\n            // If the bottom-edge is visible (or about to be), enable height animation\r\n            if (box.bottom + (offset || 0) < windowEdge)\r\n                classes.add(edgeClass);\r\n\r\n            // If the bottom-edge isn't visible anyway, disable height animation immediately\r\n            else if (box.bottom > windowEdge)\r\n                classes.remove(edgeClass);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Update the vertical ordinate of each sibling for a particular fold.\r\n     *\r\n     * @param {Fold} fold\r\n     * @param {Number} offset - Pixel distance to adjust by\r\n     */\r\n    updateFold(fold, offset) {\r\n        let next = fold;\r\n        let parentFold = this.parentFold;\r\n\r\n        while (next = next.nextFold)\r\n            next.y += offset;\r\n        parentFold || this.edgeCheck(offset);\r\n        fold.height += offset;\r\n        this.height += offset;\r\n\r\n        parentFold && parentFold.open && this.parent.updateFold(parentFold, offset);\r\n    }\r\n\r\n\r\n    /**\r\n     * Update the height of each fold to fit its content.\r\n     */\r\n    update() {\r\n        let y = 0;\r\n        let height = 0;\r\n        for (let i of this.folds) {\r\n            i.y = y;\r\n            i.fit();\r\n            y += i.height;\r\n            height += i.height;\r\n        }\r\n\r\n        let parentFold = this.parentFold;\r\n        let diff = height - this._height;\r\n        parentFold\r\n            ?\r\n            (parentFold.open && this.parent.updateFold(parentFold, diff)) :\r\n            this.edgeCheck(diff);\r\n\r\n        this.height = height;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Recalculate the boundaries of an Accordion and its descendants.\r\n     *\r\n     * This method should only be called if the width of a container changes,\r\n     * or a fold's contents have resized unexpectedly (such as when images load).\r\n     *\r\n     * @param {Boolean} allowSnap - Snap folds instantly into place without transitioning\r\n     */\r\n    refresh(allowSnap) {\r\n        let snap = allowSnap ? this.snapClass : false;\r\n        snap && this.el.classList.add(snap);\r\n\r\n        this.update();\r\n        if (this.childAccordions)\r\n            this.childAccordions.forEach(a => a.parentFold.open ?\r\n                a.refresh(allowSnap) :\r\n                (a.parentFold.needsRefresh = true));\r\n\r\n        snap && setTimeout(() => this.el.classList.remove(snap), 20);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Whether one of the Accordion's folds has been resized incorrectly.\r\n     *\r\n     * @type {Boolean}\r\n     * @readonly\r\n     * @property\r\n     */\r\n    get wrongSize() {\r\n        for (let i of this.folds)\r\n            if (i.wrongSize) return true;\r\n        if (this.childAccordions)\r\n            for (let i of this.childAccordions)\r\n                if (i.wrongSize) return true;\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Return the top-level ancestor this accordion's nested inside.\r\n     *\r\n     * @type {Accordion}\r\n     * @readonly\r\n     * @property\r\n     */\r\n    get root() {\r\n        let result = this;\r\n        while (result) {\r\n            if (!result.parent) return result;\r\n            result = result.parent;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Alter the rate at which screen-resize events update accordion widths.\r\n     *\r\n     * @param {Number} delay - Rate expressed in milliseconds\r\n     */\r\n    static setResizeRate(delay) {\r\n        let fn = function() {\r\n            for (let i of accordions)\r\n                i.parent || i.disabled || i.refresh(true);\r\n        };\r\n\r\n        window.removeEventListener(\"resize\", this.onResize);\r\n\r\n        // Make sure we weren't passed an explicit value of FALSE, or a negative value\r\n        if (false !== delay && (delay = +delay || 0) >= 0) {\r\n            this.onResize = delay ? (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.debounce)(fn, delay) : fn;\r\n            window.addEventListener(\"resize\", this.onResize);\r\n            if (delay) lastResizeRate = delay;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Return the closest (most deeply-nested) accordion enclosing an element.\r\n     *\r\n     * @param {Node} node\r\n     * @return {Accordion}\r\n     */\r\n    static getAccordion(node) {\r\n        while (node) {\r\n            if (\"accordion\" in node)\r\n                return accordions[node.accordion];\r\n\r\n            node = node.parentNode;\r\n            if (!node || node.nodeType !== 1) return null;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Return the closest (most deeply-nested) fold enclosing an element.\r\n     *\r\n     * @param {Node} node\r\n     * @return {Fold}\r\n     */\r\n    static getFold(node) {\r\n        while (node) {\r\n            if (\"accordionFold\" in node)\r\n                return _fold_mjs__WEBPACK_IMPORTED_MODULE_1__.folds[node.accordionFold];\r\n\r\n            node = node.parentNode;\r\n            if (!node || node.nodeType !== 1) return null;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nAccordion.setResizeRate(25);\r\nwindow.Accordion = Accordion;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/accordion.mjs\n");

/***/ }),

/***/ "./src/js/fold.mjs":
/*!*************************!*\
  !*** ./src/js/fold.mjs ***!
  \*************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Fold),\n/* harmony export */   \"folds\": () => (/* binding */ folds)\n/* harmony export */ });\n/* harmony import */ var _helpers_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.mjs */ \"./src/js/helpers.mjs\");\n\r\n\r\nconst folds = [];\r\n\r\n\r\n/**\r\n * Represents a single panel of togglable content inside an Accordion.\r\n *\r\n * @class\r\n */\r\nclass Fold {\r\n\r\n    /**\r\n     * Instantiate a new Fold instance.\r\n     *\r\n     * @param {Accordion} accordion\r\n     * @param {HTMLElement} el\r\n     * @constructor\r\n     */\r\n    constructor(accordion, el) {\r\n        let heading = el.firstElementChild;\r\n        let content = el.lastElementChild;\r\n        let useBorders = accordion.useBorders;\r\n\r\n        this.index = folds.push(this) - 1;\r\n        this.accordion = accordion;\r\n        this.el = el;\r\n        this.heading = heading;\r\n        this.content = content;\r\n        this.openClass = accordion.openClass;\r\n        this.closeClass = accordion.closeClass;\r\n        this.ariaEnabled = !accordion.noAria;\r\n        this.heightOffset = accordion.heightOffset;\r\n        this.useBorders = \"auto\" === useBorders ? (0 !== this.elBorder + this.headingBorder) : useBorders;\r\n        this.useTransforms = !accordion.noTransforms && _helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.cssTransform;\r\n        this.onToggle = accordion.onToggle;\r\n        el.accordionFold = this.index;\r\n\r\n\r\n        // Keyboard navigation\r\n        if (!accordion.noKeys) {\r\n            heading.tabIndex = 0;\r\n            heading.addEventListener(\"keydown\", this.onKeyDown = e => {\r\n                const key = e.keyCode;\r\n                let fold;\r\n\r\n                switch (key) {\r\n\r\n                    // Spacebar: Toggle\r\n                    case 32:\r\n                        e.preventDefault(); // Fall-through\r\n\r\n\r\n                        // Enter: Toggle\r\n                    case 13:\r\n                        this.open = !this.open;\r\n                        if (\"A\" === e.target.tagName)\r\n                            e.preventDefault();\r\n                        break;\r\n\r\n\r\n                        // Escape: Clear focus\r\n                    case 27:\r\n                        e.target.blur();\r\n                        break;\r\n\r\n\r\n                        // Up arrow: Previous section\r\n                    case 38:\r\n                        {\r\n\r\n                            // Is there a previous sibling to navigate up to?\r\n                            if (fold = this.previousFold) {\r\n                                let children = fold.childAccordions;\r\n\r\n                                // Is it open, and does it have nested accordions?\r\n                                if (fold.open && children) {\r\n                                    let lastAcc;\r\n                                    let lastFold;\r\n\r\n                                    // Locate the deepest/nearest accordion that's currently exposed\r\n                                    while (children) {\r\n                                        lastAcc = children[children.length - 1];\r\n                                        lastFold = lastAcc.folds[lastAcc.folds.length - 1];\r\n                                        if (!lastFold.open) break;\r\n                                        children = lastFold.childAccordions;\r\n                                    }\r\n\r\n                                    lastFold.heading.focus();\r\n                                }\r\n\r\n                                // Nope\r\n                                else fold.heading.focus();\r\n                            }\r\n\r\n                            // Is there a higher level we can jump back up to?\r\n                            else if (this.accordion.parent)\r\n                                this.accordion.parentFold.heading.focus();\r\n\r\n                            // There's nothing to move back to, so just let the browser run its usual behaviour\r\n                            else return true;\r\n\r\n                            e.preventDefault();\r\n                            return false;\r\n                        }\r\n\r\n\r\n\r\n                        // Down arrow: Next section\r\n                    case 40:\r\n                        {\r\n                            const children = this.childAccordions;\r\n\r\n                            // Is there a nested accordion to jump into?\r\n                            if (this.open && children)\r\n                                children[0].folds[0].heading.focus();\r\n\r\n                            // No, there isn't. Is there another sibling to move down to?\r\n                            else if (fold = this.nextFold)\r\n                                fold.heading.focus();\r\n\r\n                            // Is there a containing accordion we can navigate back up to?\r\n                            else if (this.accordion.parent) {\r\n                                let parent = this;\r\n                                while (parent = parent.accordion.parentFold)\r\n                                    if (fold = parent.nextFold) {\r\n                                        fold.heading.focus();\r\n                                        break;\r\n                                    }\r\n\r\n                                    // Nowhere left to go...\r\n                                if (!parent) return true;\r\n                            }\r\n\r\n                            // Nah. Just scroll the window normally, as per browser default\r\n                            else return true;\r\n\r\n                            e.preventDefault();\r\n                            return false;\r\n                        }\r\n\r\n\r\n                        // Left arrow\r\n                    case 37:\r\n                        {\r\n\r\n                            // Close an opened section\r\n                            if (this.open) this.open = false;\r\n\r\n                            // Switch focus back to parent\r\n                            else if (this.accordion.parent)\r\n                                this.accordion.parentFold.heading.focus();\r\n\r\n                            break;\r\n                        }\r\n\r\n                        // Right arrow\r\n                    case 39:\r\n                        {\r\n\r\n                            // Open a closed section\r\n                            if (!this.open) this.open = true;\r\n\r\n                            // Switch focus to a nested accordion\r\n                            else if (this.childAccordions)\r\n                                this.childAccordions[0].folds[0].heading.focus();\r\n\r\n                            break;\r\n                        }\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        // Listener to record the viewport's scroll offsets at the beginning of a touch\r\n        let scrollX, scrollY;\r\n        _helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.touchEnabled && heading.addEventListener(\"touchstart\", this.onTouchStart = () => {\r\n            scrollX = window.pageXOffset;\r\n            scrollY = window.pageYOffset;\r\n        }, { passive: true });\r\n\r\n\r\n        heading.addEventListener(_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.pressEvent, this.onPress = e => {\r\n\r\n            // Pressed on something inside the header\r\n            if (e.target !== heading && heading.contains(e.target)) {\r\n\r\n                // Cancel fold-toggle if user clicked on an anchor-link\r\n                if (\"A\" === e.target.tagName && e.target.href)\r\n                    return true;\r\n            }\r\n\r\n            if (e.type !== \"touchend\" || (e.cancelable && window.pageXOffset === scrollX && window.pageYOffset === scrollY)) {\r\n                this.open = !this.open;\r\n                e.preventDefault();\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Adjust a fold's container to fit its content.\r\n     */\r\n    fit() {\r\n        let height = this.headingHeight;\r\n        if (this.open) height += this.content.scrollHeight;\r\n        if (this.useBorders) height += this.elBorder;\r\n        this.height = height;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Add or remove relevant ARIA attributes from the fold's elements.\r\n     *\r\n     * @property\r\n     * @type {Boolean}\r\n     */\r\n    get ariaEnabled() { return this._ariaEnabled; }\r\n    set ariaEnabled(input) {\r\n        if ((input = !!input) !== !!this._ariaEnabled) {\r\n            const heading = this.heading;\r\n            const content = this.content;\r\n            this._ariaEnabled = input;\r\n\r\n            // Enable ARIA-attribute management\r\n            if (input) {\r\n                heading.setAttribute(\"role\", \"tab\");\r\n                content.setAttribute(\"role\", \"tabpanel\");\r\n\r\n\r\n                // Ensure the fold's elements have unique ID attributes.\r\n                const headingSuffix = \"-heading\";\r\n                const contentSuffix = \"-content\";\r\n                let elID = this.el.id;\r\n                let id;\r\n\r\n                // Neither of the fold's elements have an ID attribute\r\n                if (!heading.id && !content.id) {\r\n                    id = elID || (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.uniqueID)(\"a\");\r\n                    heading.id = id + headingSuffix;\r\n                    content.id = id + contentSuffix;\r\n                }\r\n\r\n                // Either the heading or element lack an ID\r\n                else if (!content.id) content.id = (elID || heading.id) + contentSuffix;\r\n                else if (!heading.id) heading.id = (elID || content.id) + headingSuffix;\r\n\r\n                // Finally, double-check each element's ID is really unique\r\n                const $ = s => document.querySelectorAll(\"#\" + s);\r\n                while ($(content.id).length > 1 || $(heading.id).length > 1) {\r\n                    id = (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.uniqueID)(\"a\");\r\n                    content.id = id + contentSuffix;\r\n                    heading.id = id + headingSuffix;\r\n                }\r\n\r\n                // Update ARIA attributes\r\n                heading.setAttribute(\"aria-controls\", content.id);\r\n                content.setAttribute(\"aria-labelledby\", heading.id);\r\n\r\n\r\n                // Update the attributes that're controlled by .open's setter\r\n                heading.setAttribute(\"aria-selected\", !!this._open);\r\n                heading.setAttribute(\"aria-expanded\", !!this._open);\r\n                content.setAttribute(\"aria-hidden\", !this._open);\r\n            }\r\n\r\n            // Disabling; remove all relevant attributes\r\n            else {\r\n                heading.removeAttribute(\"role\");\r\n                heading.removeAttribute(\"aria-controls\");\r\n                heading.removeAttribute(\"aria-selected\");\r\n                heading.removeAttribute(\"aria-expanded\");\r\n\r\n                content.removeAttribute(\"role\");\r\n                content.removeAttribute(\"aria-labelledby\");\r\n                content.removeAttribute(\"aria-hidden\");\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Whether or not the fold's currently opened.\r\n     *\r\n     * @property\r\n     * @type {Boolean}\r\n     */\r\n    get open() {\r\n\r\n        // Derive the fold's opened state from the DOM if it's not been determined yet\r\n        if (undefined === this._open) {\r\n            const classes = this.el.classList;\r\n            this._open = classes.contains(this.openClass);\r\n            (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.setToken)(classes, this.closeClass, !this._open);\r\n        }\r\n\r\n        return this._open;\r\n    }\r\n\r\n    set open(input) {\r\n        if ((input = !!input) !== this._open) {\r\n\r\n            // If an onToggle callback was specified, run it. Avoid doing anything if it returns false.\r\n            if (\"function\" === typeof this.onToggle && false === this.onToggle.call(null, this, input))\r\n                return;\r\n\r\n            (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.setToken)(this.el.classList, this.openClass, input);\r\n            (0,_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.setToken)(this.el.classList, this.closeClass, !input);\r\n            this._open = input;\r\n\r\n            // Update ARIA attributes\r\n            if (this.ariaEnabled) {\r\n                const heading = this.heading;\r\n                heading.setAttribute(\"aria-selected\", input);\r\n                heading.setAttribute(\"aria-expanded\", input);\r\n                this.content.setAttribute(\"aria-hidden\", !input);\r\n            }\r\n\r\n            // If this fold was closed when the screen resized, run a full update in case its contents were juggled around\r\n            if (this.needsRefresh) {\r\n                delete this.needsRefresh;\r\n                this.accordion.refresh();\r\n            } else this.accordion.update();\r\n\r\n            // Close other folds if accordion is modal\r\n            if (this.accordion.modal && input) {\r\n                for (const fold of this.accordion.folds)\r\n                    if (this !== fold) fold.open = false;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Whether the fold's been deactivated.\r\n     *\r\n     * Not set directly; changed when setting an accordion's .disabled property.\r\n     *\r\n     * @property\r\n     * @type {Boolean}\r\n     */\r\n    get disabled() { return this._disabled; }\r\n    set disabled(input) {\r\n        if ((input = !!input) !== !!this._disabled) {\r\n            let heading = this.heading;\r\n            let style = this.el.style;\r\n            let classes = this.el.classList;\r\n\r\n            // Deactivated\r\n            if (this._disabled = input) {\r\n                style.height = null;\r\n                this.useTransforms ?\r\n                    (style[_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.cssTransform] = null) :\r\n                    (style.top = null);\r\n\r\n                _helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.touchEnabled && heading.removeEventListener(\"touchstart\", this.onTouchStart);\r\n                heading.removeEventListener(_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.pressEvent, this.onPress);\r\n                classes.remove(this.openClass, this.closeClass);\r\n                if (this.onKeyDown) {\r\n                    heading.removeEventListener(\"keydown\", this.onKeyDown);\r\n                    heading.removeAttribute(\"tabindex\");\r\n                }\r\n\r\n                if (this.ariaEnabled) {\r\n                    this.ariaEnabled = false;\r\n                    this._ariaEnabled = true;\r\n                }\r\n            }\r\n\r\n            // Reactivated\r\n            else {\r\n                style.height = this._height + \"px\";\r\n                this.useTransforms ?\r\n                    style[_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.cssTransform] =\r\n                    _helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.css3DSupported ?\r\n                    (\"translate3D(0,\" + this._y + \"px,0)\") :\r\n                    (\"translateY(\" + this._y + \"px)\") :\r\n                    (style.top = this._y + \"px\");\r\n\r\n                _helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.touchEnabled && heading.addEventListener(\"touchstart\", this.onTouchStart);\r\n                heading.addEventListener(_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.pressEvent, this.onPress);\r\n\r\n                if (this.onKeyDown) {\r\n                    heading.addEventListener(\"keydown\", this.onKeyDown);\r\n                    heading.tabIndex = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Vertical position of the fold within an accordion's container.\r\n     *\r\n     * @property\r\n     * @type {Number}\r\n     */\r\n    get y() {\r\n        if (undefined === this._y)\r\n            return (this._y = parseInt(this.el.style.top) || 0);\r\n        return this._y;\r\n    }\r\n\r\n    set y(input) {\r\n        if ((input = +input) !== this._y) {\r\n            this._y = input;\r\n            const style = this.el.style;\r\n            this.useTransforms ?\r\n                style[_helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.cssTransform] =\r\n                _helpers_mjs__WEBPACK_IMPORTED_MODULE_0__.css3DSupported ?\r\n                (\"translate3D(0,\" + input + \"px,0)\") :\r\n                (\"translateY(\" + input + \"px)\") :\r\n                (style.top = input + \"px\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Height of the fold's outermost container.\r\n     *\r\n     * @property\r\n     * @type {Number}\r\n     */\r\n    get height() {\r\n        if (undefined === this._height) {\r\n            let height = this.headingHeight + this.content.scrollHeight;\r\n            this.el.style.height = height + \"px\";\r\n            return (this._height = height);\r\n        }\r\n        return this._height;\r\n    }\r\n\r\n    set height(input) {\r\n        if (input && (input = +input) !== this._height) {\r\n            this.el.style.height = input + \"px\";\r\n            this._height = input;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Current height of the fold's heading.\r\n     *\r\n     * @type {Number}\r\n     * @readonly\r\n     */\r\n    get headingHeight() {\r\n        return this.heading.scrollHeight +\r\n            this.heightOffset +\r\n            (this.useBorders ? this.headingBorder : 0);\r\n    }\r\n\r\n    /**\r\n     * Total height consumed by the heading element's CSS borders, if any.\r\n     *\r\n     * @type {Number}\r\n     * @readonly\r\n     */\r\n    get headingBorder() {\r\n        let heading = this.heading;\r\n        return (heading.offsetHeight || 0) - (heading.clientHeight || 0);\r\n    }\r\n\r\n\r\n    /**\r\n     * Total height of the fold's container element.\r\n     *\r\n     * @type {Number}\r\n     * @readonly\r\n     */\r\n    get elHeight() {\r\n        return this.el.scrollHeight + (this.useBorders ? this.elBorder : 0);\r\n    }\r\n\r\n    /**\r\n     * Total height consumed by container element's CSS borders, if any.\r\n     * \r\n     * @type {Number}\r\n     * @readonly\r\n     */\r\n    get elBorder() {\r\n        let el = this.el;\r\n        return (el.offsetHeight || 0) - (el.clientHeight || 0);\r\n    }\r\n\r\n\r\n    /**\r\n     * Whether the fold's container has been resized incorrectly.\r\n     *\r\n     * @type {Boolean}\r\n     * @readonly\r\n     * @property\r\n     */\r\n    get wrongSize() {\r\n        return this.headingHeight + this.content.scrollHeight !== this.el.scrollHeight;\r\n    }\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/fold.mjs\n");

/***/ }),

/***/ "./src/js/helpers.mjs":
/*!****************************!*\
  !*** ./src/js/helpers.mjs ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"css3DSupported\": () => (/* binding */ css3DSupported),\n/* harmony export */   \"cssTransform\": () => (/* binding */ cssTransform),\n/* harmony export */   \"debounce\": () => (/* binding */ debounce),\n/* harmony export */   \"pressEvent\": () => (/* binding */ pressEvent),\n/* harmony export */   \"setToken\": () => (/* binding */ setToken),\n/* harmony export */   \"touchEnabled\": () => (/* binding */ touchEnabled),\n/* harmony export */   \"transitionEnd\": () => (/* binding */ transitionEnd),\n/* harmony export */   \"uniqueID\": () => (/* binding */ uniqueID)\n/* harmony export */ });\nconst touchEnabled = \"ontouchstart\" in document.documentElement;\r\nconst pressEvent = touchEnabled ? \"touchend\" : \"click\";\r\n\r\n\r\n/**\r\n * Name of the onTransitionEnd event supported by this browser.\r\n * @const {String} transitionEnd\r\n */\r\nconst transitionEnd = (function() {\r\n    const names = \"transitionend webkitTransitionEnd oTransitionEnd otransitionend\".split(\" \");\r\n    for (let i = 0; i < 4; ++i)\r\n        if (\"on\" + names[i].toLowerCase() in window)\r\n            return names[i];\r\n    return names[0];\r\n}());\r\n\r\n\r\n\r\n/**\r\n * Conditionally add or remove a token from a token-list.\r\n *\r\n * @param {DOMTokenList} list\r\n * @param {String} token\r\n * @param {Boolean} enabled\r\n */\r\nfunction setToken(list, token, enabled) {\r\n    enabled ? list.add(token) : list.remove(token);\r\n}\r\n\r\n\r\n\r\n/**\r\n * Stop a function from firing too quickly.\r\n *\r\n * Returns a copy of the original function that runs only after the designated\r\n * number of milliseconds have elapsed. Useful for throttling onResize handlers.\r\n *\r\n * @param {Function} fn - Function to debounce\r\n * @param {Number} [limit=0] - Threshold to stall execution by, in milliseconds.\r\n * @param {Boolean} [asap=false] - Call function *before* threshold elapses, not after.\r\n * @return {Function}\r\n */\r\nfunction debounce(fn, limit = 0, asap = false) {\r\n    let started, context, args, timing;\r\n\r\n    const delayed = function() {\r\n        const timeSince = Date.now() - started;\r\n        if (timeSince >= limit) {\r\n            if (!asap) fn.apply(context, args);\r\n            if (timing) clearTimeout(timing);\r\n            timing = context = args = null;\r\n        } else timing = setTimeout(delayed, limit - timeSince);\r\n    };\r\n\r\n    // Debounced copy of original function\r\n    return function() {\r\n        context = this,\r\n            args = arguments;\r\n        if (!limit)\r\n            return fn.apply(context, args);\r\n        started = Date.now();\r\n        if (!timing) {\r\n            if (asap) fn.apply(context, args);\r\n            timing = setTimeout(delayed, limit);\r\n        }\r\n    };\r\n}\r\n\r\n\r\n\r\nconst uniqueID = (function() {\r\n    const IDs = {};\r\n    const indexes = {};\r\n\r\n\r\n    /**\r\n     * Generate a unique ID for a DOM element.\r\n     *\r\n     * By default, minimalist IDs like \"_1\" or \"_2\" are generated using internally\r\n     * tracked incrementation. Uglier, more collision-proof IDs can be generated by\r\n     * passing a truthy value to the function's first argument.\r\n     *\r\n     * Irrespective of whether values are being generated simply or randomly, the\r\n     * document tree is always consulted first to ensure a duplicate ID is never\r\n     * returned.\r\n     *\r\n     * @param {String}  prefix - Prefix prepended to result. Default: \"_\"\r\n     * @param {Boolean} random - Generate collision-proof IDs using random symbols\r\n     * @param {Number}  length - Length of random passwords. Default: 6\r\n     * @return {String}\r\n     */\r\n    function uniqueID(prefix, complex, length) {\r\n        length = +(length || 6);\r\n        let result = (prefix = prefix || \"_\");\r\n\r\n        // Simple IDs\r\n        if (!complex) {\r\n\r\n            // Set this prefix's starting index if it's not been used yet\r\n            if (!indexes[prefix])\r\n                indexes[prefix] = 0;\r\n\r\n            result += ++indexes[prefix];\r\n        }\r\n\r\n        // Uglier, more collision-proof IDs\r\n        else {\r\n            const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n            result += chars[Math.round(Math.random() * 51)];\r\n            while (result.length < length)\r\n                result += chars[Math.round(Math.random() * 61)];\r\n        }\r\n\r\n        return IDs[result] || document.getElementById(result) ?\r\n            uniqueID(prefix, complex) :\r\n            (IDs[result] = true, result);\r\n    }\r\n\r\n\r\n    return uniqueID;\r\n}());\r\n\r\n\r\n\r\n// Name of the CSSOM property used by this browser for CSS transforms\r\nconst cssTransform = (function(n) {\r\n    s = document.documentElement.style;\r\n    if ((prop = n.toLowerCase()) in s) return prop;\r\n    for (var prop, s, p = \"Webkit Moz Ms O Khtml\", p = (p.toLowerCase() + p).split(\" \"), i = 0; i < 10; ++i)\r\n        if ((prop = p[i] + n) in s) return prop;\r\n    return \"\";\r\n}(\"Transform\"));\r\n\r\n\r\n// Whether 3D transforms are supported by this browser\r\nconst css3DSupported = (function(propName) {\r\n    const e = document.createElement(\"div\"),\r\n        s = e.style;\r\n    const v = [\r\n        [\"translateY(\", \")\"],\r\n        [\"translate3d(0,\", \",0)\"]\r\n    ];\r\n    try { s[propName] = v[1].join(\"1px\"); } catch (e) {}\r\n    return v[+!!s[propName]] === v[1];\r\n}(cssTransform));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/helpers.mjs\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/app.js");
/******/ 	
/******/ })()
;